rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read any user's profile (for discover page)
      allow read: if isAuthenticated();

      // Users can only create their own profile
      // Users can only update their own profile, EXCEPT for the 'coins' and 'admin' fields
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId && !('coins' in request.resource.data) && !('admin' in request.resource.data);
      
      // Admin can update any user profile (for adjusting coins)
      allow update: if isAdmin();
    }
    
    // Rules for the 'sessions' collection
    match /sessions/{sessionId} {
      // Anyone authenticated can read session details
      allow read: if isAuthenticated();
      
      // Mentee can create a session request
      allow create: if request.auth.uid == request.resource.data.menteeId;
      
      // Mentor can update the session (accept/reject/add link)
      // Mentee/Mentor can update to mark as complete
      allow update: if 
        (request.auth.uid == resource.data.mentorId || request.auth.uid == resource.data.menteeId);
    }
    
    // Rules for the 'reviews' collection
    match /reviews/{reviewId} {
      // Any authenticated user can read reviews
      allow read: if isAuthenticated();
      
      // Only the mentee of a session can create a review for it
      allow create: if request.auth.uid == request.resource.data.menteeId;
    }
    
    // Rules for the 'transactions' collection
    match /transactions/{transactionId} {
        // Users can read their own transactions
        allow read: if request.auth.uid == resource.data.userId || isAdmin();
        
        // No one can create/update/delete transactions directly from the client.
        // This is handled by the markSessionAsComplete logic which is implicitly allowed
        // inside the transaction context but blocked for direct client manipulation.
        allow write: if false;
    }
  }
}
