rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is the mentee for a given session
    function isMenteeForSession(sessionId) {
      return get(/databases/$(database)/documents/sessions/$(sessionId)).data.menteeId == request.auth.uid;
    }
    
    // Helper function to check if a user is the mentor for a given session
    function isMentorForSession(sessionId) {
      return get(/databases/$(database)/documents/sessions/$(sessionId)).data.mentorId == request.auth.uid;
    }

    // Helper function to check if the session is completed
    function isSessionCompleted(sessionId) {
      return get(/databases/$(database)/documents/sessions/$(sessionId)).data.status == 'completed';
    }

    // Helper function to check if the request is part of a feedback submission transaction
    function isSubmittingFeedback(review) {
        let mentorProfile = get(/databases/$(database)/documents/users/$(review.mentorId)).data;
        let newReviewCount = mentorProfile.reviewCount + 1;
        let newRating = (mentorProfile.rating * mentorProfile.reviewCount + review.rating) / newReviewCount;
      
        let incomingMentorData = request.resource.data;

        // Check that the user profile update is valid
        let isRatingUpdateValid = incomingMentorData.reviewCount == newReviewCount && incomingMentorData.rating == newRating;
        
        // Check that the session update is valid
        let isSessionUpdateValid = request.resource.data.feedbackSubmitted == true;

        return isRatingUpdateValid || isSessionUpdateValid;
    }


    match /users/{userId} {
      allow read;
      // Users can only create their own profile
      allow create: if request.auth.uid == userId;

      // Users can only update their own profile,
      // OR another user can update their rating, but only as part of submitting a review.
      allow update: if request.auth.uid == userId ||
                     (request.auth.uid != null && isSubmittingFeedback(request.resource.data));
    }

    match /sessions/{sessionId} {
      // Users can read/write to a session if they are the mentee or mentor
      allow read, write: if request.auth != null && (isMenteeForSession(sessionId) || isMentorForSession(sessionId));
      
      // A user can create a session if they are the mentee in the request
      allow create: if request.auth != null && request.resource.data.menteeId == request.auth.uid;
    }

    match /reviews/{reviewId} {
      allow read;
      // A review can only be created by the mentee of a completed session
      allow create: if request.auth != null &&
                       isMenteeForSession(request.resource.data.sessionId) &&
                       isSessionCompleted(request.resource.data.sessionId);
    }
  }
}
