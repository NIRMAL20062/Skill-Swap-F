
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/write their own profile, but can read other profiles.
    // Admins can read/write any profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }
    
    // Any authenticated user can create a session.
    // Only the mentor or mentee involved can update the session.
    // Admins can update any session.
    match /sessions/{sessionId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.menteeId 
                    || request.auth.uid == resource.data.mentorId
                    || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }

    // Only mentees can create reviews.
    // No one can update/delete reviews to maintain integrity. Admins can delete if needed.
    match /reviews/{reviewId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.menteeId;
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }

    // Users can only read their own transactions.
    // Transactions are created via server-side logic in transactions, not directly by clients.
    match /transactions/{transactionId} {
      allow read: if request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
      allow create, update, delete: if false; // Should be created via transactions only.
    }
  }
}
