rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // Check if the requesting user has the admin flag in their user document.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;
    }

    match /users/{userId} {
      // Any authenticated user can read any user's profile.
      allow read: if request.auth != null;
      
      // A user can only create their own profile.
      allow create: if isOwner(userId);

      // A user can update their own profile. Admins can update any profile.
      // A special exception allows a user's coin balance to be changed by another user
      // if it's part of a session transaction.
      allow update: if isOwner(userId) || isAdmin() || request.resource.data.keys().hasOnly(['coins', 'updatedAt', 'rating', 'reviewCount', 'totalRating']);

      allow delete: if isAdmin();
    }

    match /sessions/{sessionId} {
      allow read: if request.auth != null;
      
      // Only the mentee can create a session request.
      allow create: if isOwner(request.resource.data.menteeId);

      // Only the mentor or mentee involved in the session can update it.
      allow update: if request.auth.uid == resource.data.mentorId || request.auth.uid == resource.data.menteeId;
    }

    match /reviews/{reviewId} {
      // Anyone can read reviews.
      allow read: if true;
      
      // Only the mentee of the related session can create a review.
      allow create: if isOwner(request.resource.data.menteeId);
    }
    
    match /transactions/{transactionId} {
      // Users can only read their own transactions, or an admin can read any.
      allow read: if get(/databases/$(database)/documents/transactions/$(transactionId)).data.userId == request.auth.uid || isAdmin();
      
      // Allow transaction creation only if the user is part of the related session.
      // This is a minimal client-side security measure.
      allow create: if get(/databases/$(database)/documents/sessions/$(request.resource.data.relatedSessionId)).data.menteeId == request.auth.uid || 
                       get(/databases/$(database)/documents/sessions/$(request.resource.data.relatedSessionId)).data.mentorId == request.auth.uid;
    }
  }
}
